* =========================================================================== *
*                               CLIENT EVENTS                                 *
* =========================================================================== *

event:   CONNECT
brief:   Client initiates connection.
param:   object: socket         "socket" object

* =========================================================================== *

event:   DISCONNECT
brief:   Client initiates disconnection.
param:   string: message        disconnect message
inovke:  USER_UPDATED, GAME_UPDATED, CHAT_UPDATED
side:    Update userlist of all users in lobby
         Update userlist of all users in all current rooms.

* =========================================================================== *

event:   USER_INIT
brief:   Client initilization when joining server.
param:   object: userInfo       <userInfoObject>
inovke:  ROOM_UPDATED, USER_UPDATED, CHAT_UPDATED
side:    Update userlist of all users in lobby (including self).
         Update self's page to display lobby.

* =========================================================================== *

event:   ROOM_CREATE
brief:   Client creates a new room.
param:   string: roomName       name of the room
         object: roomInfo       <roomInfoObject>
inovke:  ROOM_UPDATED, USER_UPDATED, CHAT_UPDATED
side:    type == GAME:
             Update userlist of all users in lobby.
             Update userlist of all users in new room (self).
             Update self's page to display game room.
         type == CHAT:
             Update userlist of all users in new room (self).
             Update self's page with new chat tab.

* =========================================================================== *

event:   ROOM_INVITE
brief:   Client invites another user to room.
param:	 string: roomName       name of the room
          array: userNames      invitee names array
inovke:  ROOM_INVITED, USER_UPDATED
side:    type == GAME:
             Update invitee's page with invitation.
             Cannot invite more than one person.
         type == CHAT:
             Update invitee's page with new chat tab.
TODO:    add blacklist for chat

* =========================================================================== *

event:   ROOM_RESPONSE
brief:   Client responds to another user's invitation to join a (game) room.
param:	 string: roomName       name of the room
            int: response       reponse to invitation
         string: invitor        name of the invitor
inovke:  ROOM_UPDATE, USER_UPDATE, CHAT_UPDATED
side:    response == ACCEPT && type == GAME:
             Update userlist of all users in lobby.
             Update userlist of all users in new room (self).
             Update self's page to display game room.
         response == REJECT || response == BLOCK:
             Update invitor's page with response.

* =========================================================================== *

event:   ROOM_JOIN
brief:   Client joins a (game) room.
param:   string: roomName       name of the room
inovke:  ROOM_UPDATED, USER_UPDATED, CHAT_UPDATED
side:    Update userlist of all users in lobby.
         Update userlist of all users in room.
         Update self's page to display (game) room.

* =========================================================================== *

event:   ROOM_LEAVE
brief:   Client leaves a room.
param:	 string: roomName       name of the room
inovke:  ROOM_UPDATED, USER_UPDATED, CHAT_UPDATED
side:    type == LOBBY:
             Error: Leaving lobby should not call this API.
         type == GAME:
             Update userlist of all users in lobby.
             Update userlist of all users in room.
             Update self's page to display lobby.
         type == CHAT:
             Update userlist of all users in room.
             Update self's page to remove a chat tab.

* =========================================================================== *

event:   CHAT_SUBMIT
brief:   Client submits a chat message.
param:   string: roomName       the room for client to submit the message to
         string: message        chat message
inovke:  CHAT_UPDATED
side:    Update chat log of all users in (chat) room.

* =========================================================================== *

event:   GAME_SUBMIT
brief:   Client submits a game move.
param:   object: action         <gameRoomActionObject>
         string: roomName       name of the room
inovke:  GAME_UPDATED
side:    Update game state of all users in (game) room.



* =========================================================================== *
*                               SERVER EVENTS                                 *
* =========================================================================== *

event:   USER_UPDATED
brief:   Server changed room's users.
param:   object: room           <roomObject>

* =========================================================================== *

event:   ROOM_INVITED
brief:   Server send room invitation to a user.
param:   string: roomName       name of the room
         string: invitor        name of the invitor
            int: timeout        timeout in seconds
TODO:    add corresponding ROOM_RESPOND to let invitor know result?

* =========================================================================== *

event:   ROOM_UPDATED
brief:   Server changed user's room.
param:   object: rooms          <roomArray>

* =========================================================================== *

event:   CHAT_UPDATED
brief:   Server updated chat logs for room(s).
param:   string: roomName       name of the room
            int: type           message type
         string: message        message
         [object: userData]     <userDataObject>, if type == USER

* =========================================================================== *

event:   GAME_UPDATED
brief:   Server updated game state.
param:   object: gameData       <gameDataObject>

* =========================================================================== *
